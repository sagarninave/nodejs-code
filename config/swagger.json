{
  "swagger": "2.0",
  "info": {
    "description": "API Documentation",
    "version": "1.0.0",
    "title": "Ganaraj-API"
  },
  "host": "localhost:8000",
  "tags": [
    {
      "name": "Database Management",
      "description": "Get local mongo database backup"
    },
    {
      "name": "User Management",
      "description": "User management APIs such as get user, get profile, edit profile, signup, signin etc"
    },
    {
      "name": "Finance Management",
      "description": ""
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/dbbackup": {
      "get": {
        "tags": [
          "Database Management"
        ],
        "description": "Get local mongo database backup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/user/signup": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Create user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Signup user",
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/user/checkuserexists/{email}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "Check user exists",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "Check user exists",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/user/verifyemail/{userId}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "Email verification",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "description": "User id for verification code",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Login user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login user",
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/user/forgetpassword/{email}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "Send forget password link through email to set new password to user",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "Email for forget password",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/user/setnewpassword": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Setting new password by forget password link",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Set new password",
            "schema": {
              "$ref": "#/definitions/setnewpassword"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/user/userprofile/": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "User profile",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "description": "User Profile",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/user/edituserprofile": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Update user profile",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User Details to update",
            "schema": {
              "$ref": "#/definitions/edituserprofile"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "description": "Token for authenticated user",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "signup": {
      "required": [
        "first_name",
        "last_name",
        "email",
        "username",
        "password",
        "phone",
        "role",
        "created"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Sagar"
        },
        "last_name": {
          "type": "string",
          "example": "Ninave"
        },
        "email": {
          "type": "string",
          "example": "sagarninave@gmail.com"
        },
        "username": {
          "type": "string",
          "example": "sagarninave"
        },
        "password": {
          "type": "string",
          "example": "Password@123"
        },
        "phone": {
          "type": "string",
          "example": "9657445206"
        },
        "role": {
          "type": "string",
          "example": 3
        },
        "created": {
          "type": "string",
          "example": "2020-12-23"
        }
      }
    },
    "login": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "sagarninave@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "Password@123"
        }
      }
    },
    "setnewpassword": {
      "required": [
        "email",
        "code",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "sagarninave@gmail.com"
        },
        "code": {
          "type": "string",
          "example": "5ff8835a3238ab43d48f3214"
        },
        "password": {
          "type": "string",
          "example": "Password@123"
        }
      }
    },
    "edituserprofile": {
      "required": [
        "first_name",
        "last_name",
        "username",
        "phone",
        "address",
        "gender",
        "dob",
        "social"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Sagar1"
        },
        "last_name": {
          "type": "string",
          "example": "Ninave1"
        },
        "username": {
          "type": "string",
          "example": "sagarninave1"
        },
        "phone": {
          "type": "string",
          "example": "9096514816"
        },
        "address": {
          "type": "string",
          "example": "mumbai"
        },
        "gender": {
          "type": "string",
          "example": "male"
        },
        "dob": {
          "type": "string",
          "example": "1996-06-08"
        },
        "social": {
          "type": "object",
          "example": {
            "facebook": "facebook.com/sagarninave1",
            "instagram": "instagram.com/sagarninave1",
            "linkedin": "linkedin.com/sagarninave1",
            "twitter": "twitter.com/sagarninave1"
          }
        }
      }
    }
  }
}