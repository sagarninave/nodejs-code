{
  "swagger": "2.0",
  "info": {
    "description": "API Documentation",
    "version": "1.0.0",
    "title": "Ganaraj-API"
  },
  "host": "gajavakraganesh.web.app",
  "tags": [
    {
      "name": "User Management",
      "description": ""
    },
    {
      "name": "Finance Management",
      "description": ""
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/user/signup": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Create user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add users",
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/signin": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Login registered user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login user",
            "schema": {
              "$ref": "#/definitions/signin"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/updatetemporarypassword": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Set new password",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "set new password",
            "schema": {
              "$ref": "#/definitions/updatetemporarypassword"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/invitenewuser": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Invite new user by admin",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Invite new user by admin",
            "schema": {
              "$ref": "#/definitions/invitenewuser"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "For API security",
            "type": "string"
          },
          {
            "in": "header",
            "name": "payload",
            "required": true,
            "description": "For identify role privilage",
            "type": "string"
          },
          {
            "in": "header",
            "name": "agencyid",
            "required": true,
            "description": "For identify role privilage",
            "type": "integer"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/signupnewuser": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Singup new invited user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add new users",
            "schema": {
              "$ref": "#/definitions/signupnewuser"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/getuserdata/{userId}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "Get registered users",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Provide the userId id in the 'userId' identifier to get the data of that perticular user.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "For API security",
            "type": "string"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/updatemyprofile": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Get registered users",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Get users",
            "schema": {
              "$ref": "#/definitions/updatemyprofile"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "For API security",
            "type": "string"
          },
          {
            "in": "header",
            "name": "payload",
            "required": true,
            "description": "For identify role privilage",
            "type": "string"
          },
          {
            "in": "header",
            "name": "agencyid",
            "required": true,
            "description": "For identify role privilage",
            "type": "integer"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/getalluserlist": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Get all users list and also perform search oeration in the user list",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Get all users list and also perform search oeration in the user list",
            "schema": {
              "$ref": "#/definitions/getalluserlist"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "For API security",
            "type": "string"
          },
          {
            "in": "header",
            "name": "payload",
            "required": true,
            "description": "For identify role privilage",
            "type": "string"
          },
          {
            "in": "header",
            "name": "agencyid",
            "required": true,
            "description": "For identify role privilage",
            "type": "integer"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/userdetails": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Get user details",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Get user details with teams",
            "schema": {
              "$ref": "#/definitions/userdetails"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "For API security",
            "type": "string"
          },
          {
            "in": "header",
            "name": "payload",
            "required": true,
            "description": "For identify role privilage",
            "type": "string"
          },
          {
            "in": "header",
            "name": "agencyid",
            "required": true,
            "description": "For identify role privilage",
            "type": "integer"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/signout": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Logout user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Logout users",
            "schema": {
              "$ref": "#/definitions/signout"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "For API security",
            "type": "string"
          },
          {
            "in": "header",
            "name": "payload",
            "required": true,
            "description": "For identify role privilage",
            "type": "string"
          },
          {
            "in": "header",
            "name": "agencyid",
            "required": true,
            "description": "For identify role privilage",
            "type": "integer"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/changepassword": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Change user password",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Change password",
            "schema": {
              "$ref": "#/definitions/changepassword"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "For API security",
            "type": "string"
          },
          {
            "in": "header",
            "name": "payload",
            "required": true,
            "description": "For identify role privilage",
            "type": "string"
          },
          {
            "in": "header",
            "name": "agencyid",
            "required": true,
            "description": "For identify role privilage",
            "type": "integer"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/forgotpassword": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Forget password",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Forget user password",
            "schema": {
              "$ref": "#/definitions/forgotpassword"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/confirmforgotpassword": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Confirm forget password",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "confirm forget password",
            "schema": {
              "$ref": "#/definitions/confirmforgotpassword"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/adduser": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Add admin user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add admin user",
            "schema": {
              "$ref": "#/definitions/adduser"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/datafiles/changestatus": {
      "patch": {
        "tags": [
          "Finance Management"
        ],
        "description": "API for change the status of data file",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "change status of a file data",
            "schema": {
              "$ref": "#/definitions/changestatus"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "required": true,
            "description": "For API security",
            "type": "string"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    },
    "/api/v1/user/addreceivables": {
      "post": {
        "tags": [
          "Finance Management"
        ],
        "description": "Set new password",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "set new password",
            "schema": {
              "$ref": "#/definitions/addreceivables"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request is OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Authorization failed"
          },
          "404": {
            "description": "Not Found"
          },
          "408": {
            "description": "Request Timeout"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "504": {
            "description": "Gateway Timeout"
          }
        }
      }
    }
  },
  "definitions": {
    "signup": {
      "required": [
        "first_name",
        "last_name",
        "email",
        "pwd",
        "createdby_userid",
        "organization",
        "subdomain"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Akash"
        },
        "last_name": {
          "type": "string",
          "example": "Nagpure"
        },
        "email": {
          "type": "string",
          "example": "akash.nagpure@konverge.ai"
        },
        "pwd": {
          "type": "string",
          "example": "Abc@1234"
        },
        "createdby_userid": {
          "type": "integer",
          "example": 0
        },
        "organization": {
          "type": "string",
          "example": "The Logan Group, Inc"
        },
        "subdomain": {
          "type": "string",
          "example": "alexandriava.qcdevpro.com"
        }
      }
    },
    "signin": {
      "required": [
        "email",
        "pwd"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "akash.nagpure@konverge.ai"
        },
        "pwd": {
          "type": "string",
          "example": "Abc@1234"
        }
      }
    },
    "updatetemporarypassword": {
      "required": [
        "email",
        "pwd",
        "session"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "akash.nagpure@konverge.ai"
        },
        "pwd": {
          "type": "string",
          "example": "Abc@1234"
        },
        "session": {
          "type": "string",
          "example": "AYABeF1O0xFxhLdKD3Ly8jmTsCUAHQABAAdTZXJ2aWNlABBDb2duaXRvVXNlclBvb2xzAAEAB2F3cy1rbXMAS2Fybjphd3M6a21zOnVzLXdlc3QtMjowMTU3MzY3MjcxOTg6a2V5LzI5OTFhNGE5LTM5YTAtNDQ0Mi04MWU4LWRkYjY4NTllMTg2MQC4AQIBAHjnF-aQg6T9UqfEmc_QtN9hR8L_u8Pylt6mgE9ImGJtHAG3DkZoo4ZXGGQiu76Up5FsAAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglgh"
        }
      }
    },
    "signupnewuser": {
      "required": [
        "first_name",
        "last_name",
        "email",
        "pwd",
        "createdby_email"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Akash"
        },
        "last_name": {
          "type": "string",
          "example": "Nagpure"
        },
        "email": {
          "type": "string",
          "example": "akash.nagpure@konverge.ai"
        },
        "pwd": {
          "type": "string",
          "example": "Abc@1234"
        },
        "createdby_email": {
          "type": "string",
          "example": "qcadmin@yopmail.com"
        }
      }
    },
    "getuserdata": {
      "required": [
        "access_token"
      ],
      "properties": {
        "access_token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJuYW1lIjoiQWthc2ggTmFncHVyZSIsIm1vYmlsZV9udW1iZXIiOjk2NzM2Njc"
        }
      }
    },
    "updatemyprofile": {
      "required": [
        "userId",
        "first_name",
        "last_name",
        "organization"
      ],
      "properties": {
        "userId": {
          "type": "integer",
          "example": 1
        },
        "first_name": {
          "type": "string",
          "example": "Akash"
        },
        "last_name": {
          "type": "string",
          "example": "Nagpure"
        },
        "organization": {
          "type": "string",
          "example": "The Logan Group, Inc"
        }
      }
    },
    "getalluserlist": {
      "required": [
        "pageNo",
        "entriesPerPage",
        "searchEnable",
        "searchValue"
      ],
      "properties": {
        "pageNo": {
          "type": "integer",
          "example": 1
        },
        "entriesPerPage": {
          "type": "integer",
          "example": 10
        },
        "searchEnable": {
          "type": "boolean",
          "example": true
        },
        "searchValue": {
          "type": "string",
          "example": "xyz-abc"
        }
      }
    },
    "signout": {
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "akash.nagpure@konverge.ai"
        }
      }
    },
    "changepassword": {
      "required": [
        "currentpwd",
        "newpwd",
        "access_token"
      ],
      "properties": {
        "currentpwd": {
          "type": "string",
          "example": "abc@123"
        },
        "newpwd": {
          "type": "string",
          "example": "abc@1234"
        },
        "access_token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJuYW1lIjoiQWthc2ggTmFncHVyZSIsIm1vYmlsZV9udW1iZXIiOjk2NzM2Njc"
        }
      }
    },
    "forgotpassword": {
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "akash.nagpure@konverge.ai"
        }
      }
    },
    "confirmforgotpassword": {
      "required": [
        "email",
        "confirmationcode",
        "pwd"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "akash.nagpure@konverge.ai"
        },
        "confirmationcode": {
          "type": "integer",
          "example": 1234
        },
        "pwd": {
          "type": "string",
          "example": "abc@123"
        }
      }
    },
    "adduser": {
      "required": [
        "first_name",
        "last_name",
        "email",
        "createdby_userid",
        "organization",
        "agencyid"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Akash"
        },
        "last_name": {
          "type": "string",
          "example": "Nagpure"
        },
        "email": {
          "type": "string",
          "example": "akash.nagpure@konverge.ai"
        },
        "createdby_userid": {
          "type": "integer",
          "example": 0
        },
        "organization": {
          "type": "string",
          "example": "The Logan Group, Inc"
        },
        "agencyid": {
          "type": "integer",
          "example": 1
        }
      }
    }
  }
}